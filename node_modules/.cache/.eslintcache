[{"/Users/alexisramos/Desktop/career/my-react-portfolio/src/index.js":"1","/Users/alexisramos/Desktop/career/my-react-portfolio/src/reportWebVitals.js":"2","/Users/alexisramos/Desktop/career/my-react-portfolio/src/App.js":"3","/Users/alexisramos/Desktop/career/my-react-portfolio/src/components/NavBar.js":"4","/Users/alexisramos/Desktop/career/my-react-portfolio/src/components/Banner.js":"5"},{"size":535,"mtime":1672005493970,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1672005493971,"results":"8","hashOfConfig":"7"},{"size":326,"mtime":1678134789245,"results":"9","hashOfConfig":"7"},{"size":2434,"mtime":1675124383094,"results":"10","hashOfConfig":"7"},{"size":2100,"mtime":1678743814121,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mf4132",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/alexisramos/Desktop/career/my-react-portfolio/src/index.js",[],[],"/Users/alexisramos/Desktop/career/my-react-portfolio/src/reportWebVitals.js",[],[],"/Users/alexisramos/Desktop/career/my-react-portfolio/src/App.js",["29"],[],"/Users/alexisramos/Desktop/career/my-react-portfolio/src/components/NavBar.js",["30","31","32"],[],"import { useEffect, useState } from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport logo from '../assets/img/logo.svg';\nimport navIcon1 from '../assets/img/nav-icon1.svg';\nimport navIcon2 from '../assets/img/nav-icon2.svg';\nimport navIcon3 from '../assets/img/nav-icon3.svg';\n\n\nexport const NavBar = () => {\n    const [activeLink, setActiveLink] = useState('home');\n    const [scrolled, setScrolled] = useState(false);\n\n    useEffect(() => {\n        const onScroll = () => {\n            if (window.scrollY > 50) {\n                setScrolled(true);\n            } else {\n                setScrolled(false);\n            }\n        }\n\n        window.addEventListener(\"scroll\", onScroll);\n\n        return () => window.removeEventListener(\"scroll\", onScroll);\n    }, [])\n\n    const onUpdateActiveLink = (value) => {\n        setActiveLink(value);\n    }\n\n    return (\n        <Navbar expand=\"lg\" className={scrolled ? \"scrolled\": \"\"}>\n          <Container>\n            <Navbar.Brand href=\"#home\">\n                <img src={logo} alt=\"logo\" />\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n                <span className=\"navbar-toggle-icon\"></span>\n            </Navbar.Toggle>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"me-auto\">\n                <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')} >Home</Nav.Link>\n                <Nav.Link href=\"#skills\" className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\n                <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\n              </Nav>\n              <span className=\"navbar-text\">\n                  <div className=\"social-icon\">\n                      <a href=\"#\"><img src={navIcon1} alt=\"\" /></a>\n                      <a href=\"#\"><img src={navIcon2} alt=\"\" /></a>\n                      <a href=\"#\"><img src={navIcon3} alt=\"\" /></a>\n                  </div>\n                  <button className=\"vvd\" onClick={() => console.log('connect')}><span>Let's Connect</span></button>\n              </span>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      );\n}","/Users/alexisramos/Desktop/career/my-react-portfolio/src/components/Banner.js",["33","34"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { ArrowRightCircle } from \"react-bootstrap-icons\"\nimport headerImg from \"../assets/img/header-img.svg\";\n\nexport const Banner = () => {\n    const [loopNum, setLoopNum] = useState(0);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const toRotate = [ \" Full-stack Developer\", \" Web Designer\"];\n    const [text, setText] = useState('');\n    const [delta, setDelta]= useState(300 - Math.random() * 100);\n    const period = 2000;\n\n    useEffect(() => {\n        let ticker = setInterval(() => {\n            tick();\n        },delta)\n\n        return () => { clearInterval(ticker)};\n    }, [text])\n\n    const tick = () => {\n        let i = loopNum % toRotate.length;\n        let fullText = toRotate[i];\n        let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n        setText(updatedText);\n\n        if (isDeleting) {\n            setDelta(prevDelta => prevDelta /2)\n        }\n\n        if(!isDeleting && updatedText === fullText) {\n            setIsDeleting(true);\n            setDelta(period);\n        } else if(isDeleting && updatedText === '') {\n            setIsDeleting(false);\n            setLoopNum(loopNum + 1);\n            setDelta(500);\n        }\n    }\n\n    return (\n        <section className=\"banner\" id=\"home\">\n            <Container>\n                <Row className=\"align-items-center\">\n                    <Col xs={12} md={6} xl={7}>\n                        <span className=\"tagline\">Welcome to my Portfolio</span>\n                        <h1>{`Hi I'm Alexis`}<span className=\"wrap\">{text}</span></h1>\n                        <p>dummy text about me</p>\n                        <button onClick={() => console.log('connect')}>Let's Connect <ArrowRightCircle size={25} /></button>\n                    </Col>\n                    <Col xs={12} md={6} xl={5}>\n                        <img src={''} alt=\"Header Img\" />\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    )\n}",{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":48,"column":23,"nodeType":"41","endLine":48,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":49,"column":23,"nodeType":"41","endLine":49,"endColumn":35},{"ruleId":"39","severity":1,"message":"40","line":50,"column":23,"nodeType":"41","endLine":50,"endColumn":35},{"ruleId":"35","severity":1,"message":"42","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":17},{"ruleId":"43","severity":1,"message":"44","line":20,"column":8,"nodeType":"45","endLine":20,"endColumn":14,"suggestions":"46"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'headerImg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [delta, text, tick]",{"range":"50","text":"51"},[701,707],"[delta, text, tick]"]